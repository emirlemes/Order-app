# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Frontend

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  ci:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
          
    - name: Install Dependencies
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: | 
        yarn
      
    - name: Build
      run: yarn build -- --prod
      
    - name: Conventional Changelog Action
      uses: TriPSs/conventional-changelog-action@v3
      with:
        github-token: ${{ secrets.github_token }}
        output-file: "false"
        
    - name: Create Release
      uses: actions/create-release@v1
      if: ${{ steps.changelog.outputs.skipped == 'false' }}
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB_ACTION }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ steps.changelog.outputs.clean_changelog }}
        draft: false
        prerelease: false
    - name: Deploy
      run: |
        yarn deploy
